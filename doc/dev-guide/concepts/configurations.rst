.. _concepts-configs:


##############
Configurations
##############

.. _concepts-configs-tree:

.. code-block:: none

   AAAAAA/
       .gitignore
       .vscode/
           settings.json
       doc/
           conf.py
           requirements.txt
           exts/
               xref.py
       setup.py

.. contents:: Contents
   :local:

.. _configs-git:


***
Git
***

.. _configs-gitconfig:

config
======

:xref:`git-config` helps store your :wiki-pg:`identity <User_(computing)>` the
way that you want it to appear in :ref:`the Git log <git-view-project-log>`,
and allows you to :ref:`use Vim <git-setup>`. The
:ref:`Git configuring procedures <git-configuring>` include precise
instructions on how to get started with :xref:`git-config`, which you shouldn't
need that often

.. _configs-git-vim:

Vim
===

:xref:`Vim` is helpful for creating :ref:`commit messages <git-committing>`
from the :ref:`VS Code integrated terminal <tools-vs-code>`, and it comes with
:wiki-pg:`syntax highlighting <Syntax_highlighting>` that helps you figure out
if you are adhering to :xref:`Git commit guidelines <git-commit-guidelines>`

This functionality is automatically enabled, except on a
:wiki-pg:`Mac <Macintosh_operating_systems>`, so the
:ref:`Git setup procedure <git-setup>` includes instructions to create a
:vim-wiki:`.vimrc file <Open_vimrc_file>` with the appropriate
:vim-wiki:`contents <Turn_on_syntax_coloring_in_Mac_OS_X>` if you are using a
:wiki-pg:`Mac <Macintosh_operating_systems>`

.. _configs-gitignore:

.gitignore
==========

.. _configs-vs-code:


*******
VS Code
*******

.. _configs-settings-json:

settings.json
=============

.. _configs-sphinx:


******
Sphinx
******

.. _configs-conf-py:

conf.py
=======

.. csv-table:: Select references
   :header: Reference, topic
   :align: center

   :ref:`Sphinx <tools-sphinx>`, :term:`AAAAAA` conceptual explanation
   :ref:`tools-sphinx-extensions`, :term:`AAAAAA` functionality
   :doc:`sphinx-quickstart <sphinx:usage/quickstart>`, Official setup assistant
   :yt-vid:`Quickstart screencast <oJsUvBQyHBs>`, Video walkthrough
   :doc:`conf.py <sphinx:usage/configuration>`, ":ref:`Sphinx <tools-sphinx>`
   settings"

If you create a :ref:`Sphinx project <tools-sphinx>` using
:doc:`sphinx-quickstart <sphinx:usage/quickstart>`, you will end up
with a ``conf.py`` :wiki-pg:`file <Computer_file>` in your
:ref:`documentation root directory <concepts-doc-tree>`. For
:term:`AAAAAA`, most of the default
:doc:`Sphinx configuration options <sphinx:usage/configuration>` from
:doc:`sphinx-quickstart <sphinx:usage/quickstart>` are used, but there are some
additions and modifications. The :doc:`conf.py <sphinx:usage/configuration>`
in :term:`AAAAAA` has also been shuffled around a bit so that it can be
logically explained here

Because :doc:`conf.py <sphinx:usage/configuration>` is a ``.py``
(:ref:`Python <tools-python>`) :wiki-pg:`file <Computer_file>`, it can be
explained using the :rst:dir:`literalinclude`
:doc:`directive <sphinx:usage/restructuredtext/directives>` and
:ref:`napoleon <tools-napoleon>`. For the most part,
:doc:`conf.py <sphinx:usage/configuration>` is a collection
of :ref:`module-level global variables <python:tut-modules>`.
Starting from the beginning of the :wiki-pg:`file <Computer_file>`:

.. contents:: Contents
   :local:

Extensions
----------

.. literalinclude:: ../../conf.py
   :caption: :wiki-pg:`Path <Path_(computing)>` setup
   :language: python
   :lines: 1-5

Relative to the :ref:`documentation root directory <concepts-doc-tree>`, this
gives :ref:`tools-sphinx` access to the following
:wiki-pg:`paths <Path_(computing)>`:

.. csv-table::
   :align: center
   :header: :wiki-pg:`Path <Path_(computing)>`, Purpose

   ``exts``, Contains :ref:`tools-xref`
   ``../src``, "Where :ref:`napoleon <tools-napoleon>` checks for
   :ref:`source code <concepts-code-tree>`"
   ``.``, "Allows :ref:`napoleon <tools-napoleon>` to access
   :doc:`conf.py <sphinx:usage/configuration>`"

.. autodata:: conf.extensions

AAAAAA project info
-------------------

.. autodata:: conf.project
.. autodata:: conf.copyright
.. autodata:: conf.author
.. autodata:: conf.version
.. autodata:: conf.release

File handling
-------------

.. autodata:: conf.master_doc
.. autodata:: conf.exclude_patterns
.. autodata:: conf.html_static_path

Website
-------

.. autodata:: conf.html_theme
.. autodata:: conf.html_theme_options
.. autodata:: conf.linkcheck_ignore

Document generation
-------------------

These were created during :doc:`sphinx-quickstart <sphinx:usage/quickstart>`,
and have not been modified. See :ref:`conf.py <concepts-configs-tree>` for the
original :ref:`comments <python:comments>` that were generated by
:doc:`sphinx-quickstart <sphinx:usage/quickstart>`

.. py:data:: conf.htmlhelp_basename
.. py:data:: conf.latex_elements
.. py:data:: conf.latex_documents
.. py:data:: conf.man_pages
.. py:data:: conf.texinfo_documents
.. py:data:: conf.epub_title
.. py:data:: conf.epub_exclude_files


Link management
---------------

.. py:data:: conf.intersphinx_mapping

   Contains :ref:`intersphinx base URLs <sphinx-intersphinx>`

.. py:data:: conf.extlinks

   Contains :ref:`extlinks base URLs <sphinx-extlinks>`

.. py:data:: conf.xref_links

   Contains :ref:`xref base URLs <sphinx-xref>`

.. _configs-rtfd:


*************
Read the Docs
*************

.. _configs-requirements-txt:

requirements.txt
================

Some of the :ref:`tools-sphinx-extensions` used in :term:`AAAAAA` are not
:doc:`built-in <sphinx:usage/extensions/index>`, so the
:wiki-pg:`remote computer <Host_(network)>` that performs the
:doc:`Read the Docs build process <rtfd:builds>` needs information on how to
use them

Unlike the :term:`a6 conda environment <a6>` which uses
:ref:`conda packages <conda:concept-conda-package>`, the
:doc:`Read the Docs builder <rtfd:builds>` uses a
:ref:`requirements file <pypa:requirements files>` that indicates which
:ref:`PyPI packages <tools-pypi>` to :wiki-pg:`download <Download>`

Because :ref:`tools-xref` is not on the :ref:`tools-pypi`, it is simply
included in the :ref:`exts directory <concepts-configs-tree>` of the
:ref:`documentation root directory <concepts-doc-tree>`. Other
:ref:`Sphinx extensions that are not built-in <tools-sphinx-exts-extra>`,
however, must be specified in :ref:`requirements.txt <concepts-configs-tree>`:

.. literalinclude:: Contents of ../../../../requirements.txt
   :caption: :ref:`requirements.txt <concepts-configs-tree>`


.. _configs-pytest:


******
pytest
******

.. _configs-pytest-setup-py:

setup.py
========

Per :doc:`official pytest recommendations <pytest:goodpractices>`:

.. literalinclude:: ../../../setup.py
   :caption: :ref:`setup.py <concepts-configs-tree>`
   :language: python
